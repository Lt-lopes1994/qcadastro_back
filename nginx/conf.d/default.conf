# Configuração HTTP
map $http_origin $cors_origin {
    default "";
    "http://localhost:9000" $http_origin;
    "https://q-cadastro.vercel.app" $http_origin;
    "https://qprospekta.com" $http_origin;
    "https://www.qprospekta.com" $http_origin;
}

# Adicione esta seção no início do arquivo, fora de qualquer bloco server
map $http_origin $cors_origin {
    default "";
    "https://www.qprospekta.com" "$http_origin";
    "https://qprospekta.com" "$http_origin";
}

server {
    listen 80;
    server_name qprospekta.com www.qprospekta.com;  # Substitua pelo seu domínio
    
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 80;
    server_name qprospekta.com www.qprospekta.com;
    
    location / {
        return 301 https://$host$request_uri;
    }
}

# server {
#     listen 80;
#     server_name _;
    
#     # Logs
#     access_log /var/log/nginx/access.log;
#     error_log /var/log/nginx/error.log;
    
#     # Proxy para a API
#     location /api {
#         proxy_pass http://app:8000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
        
#         # Adicionar cabeçalhos CORS
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
#         add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
#         add_header 'Access-Control-Allow-Credentials' 'true' always;
        
#         # Tratar requisições preflight OPTIONS
#         if ($request_method = 'OPTIONS') {
#             add_header 'Access-Control-Allow-Origin' $cors_origin always;
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
#             add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
#             add_header 'Access-Control-Allow-Credentials' 'true' always;
#             add_header 'Access-Control-Max-Age' 1728000;
#             add_header 'Content-Type' 'text/plain charset=UTF-8';
#             add_header 'Content-Length' 0;
#             return 204;
#         }
        
#         # Timeout settings
#         proxy_connect_timeout 300s;
#         proxy_send_timeout 300s;
#         proxy_read_timeout 300s;
#     }
    
#     # Redirecionamento raiz para /api
#     location / {
#         return 301 /api/v1;
#     }

#     # Configuração para uploads
#     location /uploads {
#         alias /app/uploads;
#         expires 30d;
#         add_header Cache-Control "public, no-transform";
#     }
# }

# Configuração HTTPS
map $http_origin $cors_origin {
    default "";
    "http://localhost:9000" $http_origin;
    "https://q-cadastro.vercel.app" $http_origin;
    "https://qprospekta.com" $http_origin;
    "https://www.qprospekta.com" $http_origin;
    "https://api.qprospekta.com" $http_origin;
}

server {
    listen 443 ssl;
    server_name api.qprospekta.com;
    
    # Certificados SSL do Cloudflare
    ssl_certificate /etc/nginx/ssl/certificate.crt;
    ssl_certificate_key /etc/nginx/ssl/certificate.key;
    
    # Configurações de segurança SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    
    # API Backend
    location /api {
        proxy_pass http://app:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Tratar requisições preflight OPTIONS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Frontend
    # location / {
    #     proxy_pass http://frontend:9000; # Se tiver front configurado
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }
    
    # Uploads
    location /uploads/ {
        alias /app/uploads/; 
        expires 30d;
        add_header Cache-Control "public, no-transform";
        access_log /var/log/nginx/uploads_access.log;
        error_log /var/log/nginx/uploads_error.log debug;
        
        # Adicionar headers CORS
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
    }
}

server {
    listen 443 ssl;
    server_name _;
    
    # Certificados SSL
    ssl_certificate /etc/nginx/ssl/certificate.crt;
    ssl_certificate_key /etc/nginx/ssl/certificate.key;
    
    # Configurações de segurança SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Proxy para a API
    location /api {
        proxy_pass http://app:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Adicionar cabeçalhos CORS
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Tratar requisições preflight OPTIONS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Timeout settings
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }
    
    # Redirecionamento raiz para /api
    location / {
        proxy_pass http://app:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache_bypass $http_upgrade;
        
        # Configurações CORS essenciais
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Tratamento especial para requisições preflight OPTIONS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Configuração para uploads
    location /uploads {
        alias /app/uploads;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }
}